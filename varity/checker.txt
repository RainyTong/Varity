    double comp_verify_value;
    double epsilon, err;
    logical verified;
    if (comp_flag) {
        comp_verify_value = comp;
        // record comp_verify_value
        FILE *fp_zeta = fopen("./comp_verify_value.txt", "w");
        fprintf(fp_zeta, "%20.13E\n", comp_verify_value);
    } else {
        FILE *fileStream;
        char line [9999];
        fileStream = fopen ("./comp_verify_value.txt", "r");
        fgets (line, sizeof(line), fileStream);
        fclose(fileStream);

        comp_verify_value = atof(line);
        printf("comp_verify_value is %20.13E\n", comp_verify_value);
    }
    // epsilon = 4.9406564584124654E-324;
    epsilon = 1E-10;
    err = fabs(comp - comp_verify_value) / fabs(comp_verify_value);
    if (err <= epsilon) {
        verified = true;
        printf(" VERIFICATION SUCCESSFUL\n");
        printf(" Comp is    %20.13E\n", comp);
        printf(" Error is   %20.13E\n", err);
    } else {
        verified = false;
        printf(" VERIFICATION FAILED\n");
        printf(" Comp                %20.13E\n", comp);
        printf(" Error               %20.13E\n", err);
        printf(" The correct comp is %20.13E\n", comp_verify_value);
    }
    // record in file verified, zeta, err
    FILE *fp = fopen("./log.txt", "w");
    fputs(verified ? "true\n" : "false\n", fp);
    fprintf(fp, "%20.13E\n", comp);
    fprintf(fp, "%20.13E\n", err);

    clock_t end = clock();
    time_spent += (double)(end - begin) / CLOCKS_PER_SEC;
    // record time
    FILE *fp_t = fopen("./time.txt", "w");
    fprintf(fp_t, "%20.13E\n", time_spent);